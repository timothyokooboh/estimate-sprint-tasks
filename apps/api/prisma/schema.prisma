// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TASK_STATUS {
  ACTIVE
  COMPLETED
}

enum PARTICIPANT_STATUS {
  ACTIVE
  INACTIVE
}

enum SESSION_STATUS {
  ACTIVE
  INACTIVE
}

enum ESTIMATION_MODE {
  TIME_ESTIMATES
  STORY_POINTS
}

model Participant {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String @db.VarChar(255)
  isModerator Boolean @default(false)
  status PARTICIPANT_STATUS @default(ACTIVE)
  sessionId String
  session Session @relation(fields: [sessionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  votes Vote[]
}

model Session {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String @db.VarChar(255)
  status SESSION_STATUS @default(ACTIVE)
  estimationMode ESTIMATION_MODE @default(TIME_ESTIMATES)
  participants Participant[]
  tasks Task[]
  currentTaskId String @default("") // ID of the current task being voted for
}

model Task {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String @db.VarChar(255)
  status TASK_STATUS @default(ACTIVE)
  sessionId String
  session Session @relation(fields: [sessionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  votes Vote[]
}

model Vote {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  value Float
  taskId String
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  participantId String
  participant Participant @relation(fields: [participantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

